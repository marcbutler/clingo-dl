name: tests

on:
  - push
  - pull_request

jobs:
  build:
    name: clingo-dl ${{ matrix.python-version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.7']
        include:
          - os: 'ubuntu-latest'
            generator: 'Ninja'
            build_type: 'Debug'
            channels: 'potassco/label/dev'
            env_file: '.github/linux-env.yml'
            tidy: "-DCMAKE_CXX_CLANG_TIDY:STRING=''"
          - os: 'macos-latest'
            generator: 'Ninja'
            build_type: 'Debug'
            env_file: '.github/macos-env.yml'
            tidy: "-DCMAKE_CXX_CLANG_TIDY:STRING='clang-tidy;--extra-arg-before=-stdlib=libc++;-header-filter=.*hh;-warnings-as-errors=clang-analyzer-*,readability-*,modernize-*,cppcoreguidelines-*,performance-*,bugprone-*,-modernize-use-trailing-return-type,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-type-union-access,-cppcoreguidelines-pro-type-vararg'"
          - os: 'windows-latest'
            generator: 'Visual Studio 17 2022'
            build_type: 'Release'
            env_file: '.github/generic-env.yml'
            tidy: "-DCMAKE_CXX_CLANG_TIDY:STRING=''"

    steps:
    - uses: actions/checkout@v2

    - name: setup miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        activate-environment: clingo-dl
        python-version: ${{ matrix.python-version }}
        environment-file: ${{ matrix.env_file }}

    - name: print info
      shell: bash -l {0}
      run: |
        env
        conda info
        conda list

    - name: build and test
      shell: bash -l {0}
      run: >
        ctest
        --build-config "${{ matrix.build_type }}"
        --build-generator "${{ matrix.generator }}"
        --build-and-test . build
        --build-options -DCLINGODL_BUILD_TESTS=On "${{ matrix.tidy }}"
        --test-command ctest -V --build-config "${{ matrix.build_type }}"
